:host {
  display: contents;
}
:host {
  --focus-color: var(--text-color);
  --focus-opacity: var(--s-focus-state-layer-opacity);
  --hover-color: var(--text-color);
  --hover-opacity: var(--s-hover-state-layer-opacity);
  --press-color: var(--text-color);
  --press-opacity: var(--s-press-state-layer-opacity);
  --ripple-duration: 150ms;
  --hover-duration: 15ms;
  --focus-duration: 75ms;
  --press-duration: 105ms;
  --min-color-stop-length: 75%;
}

:host([disabled]) {
  opacity: 0;
}

.ripple {
  pointer-events: none;
  border-radius: inherit;
  position: absolute;
  inset: 0;
  overflow: hidden;
  will-change: transform;
  outline: none;
  -webkit-tap-highlight-color: transparent;
}

.ripple::before,
.ripple::after {
  position: absolute;
  opacity: 0;
  pointer-events: none;
  content: "";
}

.ripple::before {
  background-color: var(--hover-color);
  transition-property: opacity, background-color;
  transition-duration: var(--hover-duration), var(--hover-duration);
  transition-timing-function: linear, linear;
  inset: 0;
}

.ripple::after {
  background: radial-gradient(
    closest-side,
    var(--press-color) max(calc(100% - 70px), var(--min-color-stop-length)),
    transparent 100%
  );
  transition-property: opacity;
  transition-duration: var(--ripple-duration);
  transition-timing-function: linear;
  transform-origin: center center;
}

.hovered::before {
  background-color: var(--hover-color);
  opacity: var(--hover-opacity);
}

.focused::before {
  background-color: var(--focus-color);
  opacity: var(--focus-opacity);
  transition-duration: var(--focus-duration);
}

.pressed::after {
  opacity: var(--press-opacity);
  transition-duration: var(--press-duration);
}

@media screen and (forced-colors: active) {
  :host {
    display: none;
  }
}
