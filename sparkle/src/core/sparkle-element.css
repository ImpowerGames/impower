:host {
  --transition-property: opacity, transform, filter;
}

:host > * {
  --border-block-start-color: var(
    --border-color-t,
    var(--border-color-tb, var(--border-color, none))
  );
  --border-block-end-color: var(
    --border-color-b,
    var(--border-color-tb, var(--border-color, none))
  );
  --border-inline-start-color: var(
    --border-color-l,
    var(--border-color-lr, var(--border-color, none))
  );
  --border-inline-end-color: var(
    --border-color-r,
    var(--border-color-lr, var(--border-color, none))
  );

  --border-block-start-width: var(
    --border-width-t,
    var(--border-width-tb, var(--border-width, 0))
  );
  --border-block-end-width: var(
    --border-width-b,
    var(--border-width-tb, var(--border-width, 0))
  );
  --border-inline-start-width: var(
    --border-width-l,
    var(--border-width-lr, var(--border-width, 0))
  );
  --border-inline-end-width: var(
    --border-width-r,
    var(--border-width-lr, var(--border-width, 0))
  );

  --border-start-start-radius: var(
    --corner-tl,
    var(--corner-t, var(--corner-l, var(--corner, 0)))
  );
  --border-start-end-radius: var(
    --corner-tr,
    var(--corner-t, var(--corner-r, var(--corner, 0)))
  );
  --border-end-start-radius: var(
    --corner-bl,
    var(--corner-b, var(--corner-l, var(--corner, 0)))
  );
  --border-end-end-radius: var(
    --corner-br,
    var(--corner-b, var(--corner-r, var(--corner, 0)))
  );

  --inset-block-start: var(--inset-t, var(--inset-tb, var(--inset, auto)));
  --inset-block-end: var(--inset-b, var(--inset-tb, var(--inset, auto)));
  --inset-inline-start: var(--inset-l, var(--inset-lr, var(--inset, auto)));
  --inset-inline-end: var(--inset-r, var(--inset-lr, var(--inset, auto)));

  --margin-block-start: var(--margin-t, var(--margin-tb, var(--margin, 0)));
  --margin-block-end: var(--margin-b, var(--margin-tb, var(--margin, 0)));
  --margin-inline-start: var(--margin-l, var(--margin-lr, var(--margin, 0)));
  --margin-inline-end: var(--margin-r, var(--margin-lr, var(--margin, 0)));

  --padding-block-start: var(--padding-t, var(--padding-tb, var(--padding, 0)));
  --padding-block-end: var(--padding-b, var(--padding-tb, var(--padding, 0)));
  --padding-inline-start: var(
    --padding-l,
    var(--padding-lr, var(--padding, 0))
  );
  --padding-inline-end: var(--padding-r, var(--padding-lr, var(--padding, 0)));
}

:host([hidden]) {
  display: none !important;
}

.disabled * {
  pointer-events: none;
}

.position {
  position: var(--position, absolute);
}

.aspect {
  aspect-ratio: var(--aspect, 1/1);
}

.overflow-x {
  overflow-x: var(--overflow-x, scroll);
}
.overflow-x--scroll {
  overflow-y: var(--overflow-y, clip);
  pointer-events: var(--interactable, auto);
  min-width: var(--width-min, 100%);
  position: var(--position, absolute);
  top: var(--inset-t, var(--inset-tb, var(--inset, 0)));
  right: var(--inset-r, var(--inset-lr, var(--inset, 0)));
  bottom: var(--inset-b, var(--inset-tb, var(--inset, 0)));
  left: var(--inset-l, var(--inset-lr, var(--inset, 0)));
}
.overflow-y {
  overflow-y: var(--overflow-y, scroll);
}
.overflow-y--scroll {
  overflow-x: var(--overflow-x, clip);
  pointer-events: var(--interactable, auto);
  min-height: var(--height-min, 100%);
  position: var(--position, absolute);
  top: var(--inset-t, var(--inset-tb, var(--inset, 0)));
  right: var(--inset-r, var(--inset-lr, var(--inset, 0)));
  bottom: var(--inset-b, var(--inset-tb, var(--inset, 0)));
  left: var(--inset-l, var(--inset-lr, var(--inset, 0)));
}

.z {
  position: var(--position, relative);
  z-index: var(--z, 1);
}

.width {
  width: var(--width, 100%);
}
.width-min {
  min-width: var(--width-min, 0);
}
.width-max {
  max-width: var(--width-max, 100%);
}

.height {
  height: var(--height, 100%);
}
.height-min {
  min-height: var(--height-min, 0);
}
.height-max {
  max-height: var(--height-max, 100%);
}

.corner {
  border-start-start-radius: var(--corner, 8px);
  border-start-end-radius: var(--corner, 8px);
  border-end-start-radius: var(--corner, 8px);
  border-end-end-radius: var(--corner, 8px);
}
.corner-t {
  border-start-start-radius: var(--corner-t, 8px);
  border-start-end-radius: var(--corner-t, 8px);
}
.corner-b {
  border-end-start-radius: var(--corner-b, 8px);
  border-end-end-radius: var(--corner-b, 8px);
}
.corner-l {
  border-start-start-radius: var(--corner-l, 8px);
  border-end-start-radius: var(--corner-l, 8px);
}
.corner-r {
  border-start-end-radius: var(--corner-r, 8px);
  border-end-end-radius: var(--corner-r, 8px);
}
.corner-tl {
  border-start-start-radius: var(--corner-tl, 8px);
}
.corner-tr {
  border-start-end-radius: var(--corner-tr, 8px);
}
.corner-bl {
  border-end-start-radius: var(--corner-bl, 8px);
}
.corner-br {
  border-end-end-radius: var(--corner-br, 8px);
}

.inset {
  inset-block-start: var(--inset, 8px);
  inset-block-end: var(--inset, 8px);
  inset-inline-start: var(--inset, 8px);
  inset-inline-end: var(--inset, 8px);
}
.inset-tb {
  inset-block-start: var(--inset-tb, 8px);
  inset-block-end: var(--inset-tb, 8px);
}
.inset-lr {
  inset-inline-start: var(--inset-lr, 8px);
  inset-inline-end: var(--inset-lr, 8px);
}
.inset-t {
  inset-block-start: var(--inset-t, 8px);
}
.inset-b {
  inset-block-end: var(--inset-b, 8px);
}
.inset-l {
  inset-inline-start: var(--inset-l, 8px);
}
.inset-r {
  inset-inline-end: var(--inset-r, 8px);
}

.border-color {
  border-style: solid;
  border-color: var(--border-color, hsl(0 100% 100% / 50%));
}
.border-color-tb {
  border-style: solid;
  border-block-start-color: var(--border-color-tb, hsl(0 100% 100% / 50%));
  border-block-end-color: var(--border-color-tb, hsl(0 100% 100% / 50%));
}
.border-color-lr {
  border-style: solid;
  border-inline-start-color: var(--border-color-lr, hsl(0 100% 100% / 50%));
  border-inline-end-color: var(--border-color-lr, hsl(0 100% 100% / 50%));
}
.border-color-t {
  border-style: solid;
  border-block-start-color: var(--border-color-t, hsl(0 100% 100% / 50%));
}
.border-color-b {
  border-style: solid;
  border-block-end-color: var(--border-color-b, hsl(0 100% 100% / 50%));
}
.border-color-l {
  border-style: solid;
  border-inline-start-color: var(--border-color-l, hsl(0 100% 100% / 50%));
}
.border-color-r {
  border-style: solid;
  border-inline-end-color: var(--border-color-r, hsl(0 100% 100% / 50%));
}

.border-width {
  border-style: solid;
  border-block-start: var(--border-width, 8px);
  border-block-end: var(--border-width, 8px);
  border-inline-start: var(--border-width, 8px);
  border-inline-end: var(--border-width, 8px);
}
.border-width-tb {
  border-style: solid;
  border-block-start: var(--border-width-tb, 8px);
  border-block-end: var(--border-width-tb, 8px);
}
.border-width-lr {
  border-style: solid;
  border-inline-start: var(--border-width-lr, 8px);
  border-inline-end: var(--border-width-lr, 8px);
}
.border-width-t {
  border-style: solid;
  border-block-start: var(--border-width-t, 8px);
}
.border-width-b {
  border-style: solid;
  border-block-end: var(--border-width-b, 8px);
}
.border-width-l {
  border-style: solid;
  border-inline-start: var(--border-width-l, 8px);
}
.border-width-r {
  border-style: solid;
  border-inline-end: var(--border-width-r, 8px);
}

.margin {
  margin-block-start: var(--margin, 8px);
  margin-block-end: var(--margin, 8px);
  margin-inline-start: var(--margin, 8px);
  margin-inline-end: var(--margin, 8px);
}
.margin-tb {
  margin-block-start: var(--margin-tb, 8px);
  margin-block-end: var(--margin-tb, 8px);
}
.margin-lr {
  margin-inline-start: var(--margin-lr, 8px);
  margin-inline-end: var(--margin-lr, 8px);
}
.margin-t {
  margin-block-start: var(--margin-t, 8px);
}
.margin-b {
  margin-block-end: var(--margin-b, 8px);
}
.margin-l {
  margin-inline-start: var(--margin-l, 8px);
}
.margin-r {
  margin-inline-end: var(--margin-r, 8px);
}

.padding {
  padding-block-start: var(--padding, 8px);
  padding-block-end: var(--padding, 8px);
  padding-inline-start: var(--padding, 8px);
  padding-inline-end: var(--padding, 8px);
}
.padding-tb {
  padding-block-start: var(--padding-tb, 8px);
  padding-block-end: var(--padding-tb, 8px);
}
.padding-lr {
  padding-inline-start: var(--padding-lr, 8px);
  padding-inline-end: var(--padding-lr, 8px);
}
.padding-t {
  padding-block-start: var(--padding-t, 8px);
}
.padding-b {
  padding-block-end: var(--padding-b, 8px);
}
.padding-l {
  padding-inline-start: var(--padding-l, 8px);
}
.padding-r {
  padding-inline-end: var(--padding-r, 8px);
}

.child-layout {
  display: flex;
  flex-direction: var(--child-layout, row);
}
.child-gap {
  gap: var(--child-gap, 8px);
}
.child-align {
  align-items: var(--child-align, center);
}
.child-justify {
  justify-content: var(--child-justify, center);
}
.child-overflow {
  flex-wrap: var(--child-overflow, nowrap);
}
.self-align {
  align-self: var(--self-align, center);
}

.grow {
  flex-grow: var(--grow, 1);
}

.fill {
  fill: var(--fill, currentColor);
}
.stroke {
  stroke: var(--stroke, currentColor);
}
.stroke-width {
  stroke-width: var(--stroke-width, 1);
}

.invisible {
  visibility: var(--invisible, hidden);
}
.interactable {
  pointer-events: var(--interactable, auto);
}
.interactable--cursor {
  cursor: var(--interactable--cursor, auto);
}
.selectable {
  user-select: var(--selectable, auto);
}
.selectable--cursor {
  cursor: var(--selectable--cursor, auto);
}

.text-font {
  font-family: var(--text-font, monospace);
}

.text-size {
  font-size: var(--text-size, 1rem);
}
.text-size--line-height {
  line-height: var(--text-size--height, 1.5);
}

.text-leading {
  line-height: var(--text-leading, 1.5);
}

.text-kerning {
  letter-spacing: var(--text-kerning, 1.5);
}

.text-weight {
  font-weight: var(--text-weight, 600);
}
.text-italic {
  font-style: var(--text-italic, italic);
}
.text-underline,
.text-strikethrough {
  /* must preserve trailing comma for empty fallback */
  /* prettier-ignore */
  text-decoration-line: var(--text-underline,) var(--text-strikethrough,);
}
.text-underline-offset {
  text-underline-offset: var(--text-underline-offset, 4px);
}
.text-decoration-thickness {
  text-decoration-thickness: var(--text-decoration-thickness, 4px);
}
.text-case {
  text-transform: var(--text-case, uppercase);
}
.text-align {
  text-align: var(--text-align, center);
}
.text-overflow {
  text-overflow: var(--text-overflow, clip);
}
.text-wrap {
  white-space: var(--text-wrap, break-spaces);
}
.text-color {
  color: var(--text-color, white);
}
.text-stroke,
.text-stroke-color,
.text-stroke-width {
  text-shadow: var(--text-stroke);
}

.background-color {
  background-color: var(--background-color);
}
.background-gradient,
.background-pattern,
.background-image {
  background-image: var(--background-gradient, none),
    var(--background-pattern, none), var(--background-image, none);
}
.background-repeat {
  background-repeat: no-repeat, no-repeat, var(--background-repeat, repeat);
}
.background-align {
  background-position: center, center, var(--background-align, center);
}
.background-fit {
  background-size: auto, cover, var(--background-fit, contain);
}

.clip {
  clip-path: var(--clip, circle(50%));
}

.shadow {
  transition-property: var(--transition-property);
  filter: var(
    --shadow,
    drop-shadow(0 1px 2px hsl(0 0% 0% / 30%)) 0 1px 3px hsl(0 0% 0% / 15%)
  );
}
.shadow-inset {
  box-shadow: var(
    --shadow-inset,
    inset 0 1px 2px hsl(0 0% 0% / 30%),
    inset 0 1px 3px hsl(0 0% 0% / 15%)
  );
}

.blur,
.brightness,
.contrast,
.grayscale,
.hue,
.invert,
.sepia,
.saturate {
  /* must preserve trailing comma for empty fallback */
  /* prettier-ignore */
  backdrop-filter: var(--brightness,) var(--contrast,)
  var(--saturate,) var(--grayscale,) var(--sepia,)
  var(--hue,) var(--invert,) var(--blur,);
}

.blend {
  mix-blend-mode: var(--blend, normal);
}

.opacity {
  transition-property: var(--transition-property);
  opacity: var(--opacity, 1);
}

.translate-x,
.translate-y,
.translate-z,
.rotate-x,
.rotate-y,
.rotate-z,
.scale-x,
.scale-y,
.scale-z,
.skew-x,
.skew-y {
  transition-property: var(--transition-property);
  transform: scale(var(--scale-x, 1), var(--scale-y, 1), var(--scale-z, 1))
    rotate(var(--rotate-x, 0), var(--rotate-y, 0), var(--rotate-z, 0))
    translate(
      var(--translate-x, 0),
      var(--translate-y, 0),
      var(--translate-z, 0)
    )
    skew(var(--skew-x, 0), var(--skew-y, 0));
}

.pivot {
  transform-origin: var(--pivot, left);
}

.delay {
  transition-delay: var(--delay, 100ms);
}
.duration {
  transition-duration: var(--duration, 100ms);
}
.ease {
  transition-timing-function: var(--ease, ease);
}

.animate {
  animation: var(--animate, var(--s-animation-bounce));
}

.mask {
  --s-mask-angled-corner: conic-gradient(
        from -45deg at var(--corner, 8px) var(--corner, 8px),
        #0000 25%,
        #000 0
      )
      calc(-1 * var(--corner, 8px)) 0 /100% 51% repeat-x,
    conic-gradient(
        from 135deg at var(--corner, 8px) calc(100% - var(--corner, 8px)),
        #0000 25%,
        #000 0
      )
      calc(-1 * var(--corner, 8px)) 100%/100% 51% repeat-x;

  --s-mask-scooped-corner: radial-gradient(
      var(--corner, 8px) at var(--corner, 8px) var(--corner, 8px),
      #0000 99%,
      #000
    )
    calc(-1 * var(--corner, 8px)) calc(-1 * var(--corner, 8px));

  --s-mask-notched-corner: conic-gradient(
      at calc(2 * var(--corner, 8px)) calc(2 * var(--corner, 8px)),
      #000 75%,
      #0000 0
    )
    calc(-1 * var(--corner, 8px)) calc(-1 * var(--corner, 8px));

  background-color: transparent !important;
  background-image: none !important;
}
.mask::before {
  /* Apply mask to a pseudo-element so that drop-shadow filters applied to the root element will match the shape of the mask */
  position: absolute;
  inset: 0;
  content: "";
  background-image: var(--background-gradient, none),
    var(--background-pattern, none), var(--background-image, none);
  background-color: var(--background-color);
  -webkit-mask: var(--mask, none);
  mask: var(--mask, none);
}

.focused::before {
  position: absolute;
  inset: 0;
  content: "";
  z-index: -1;
  border-radius: inherit;
  outline: var(--s-color-focus) var(--s-focus-ring-style)
    var(--s-focus-ring-width);
  outline-offset: calc(
    -1 * var(--s-focus-ring-width) - var(--s-focus-ring-offset)
  );
}
