/****************************** UTILITY STYLES ******************************/

/* UTILITIES */

[-display].style {
  display: var(---display, "block") !important;
}

[-position].style {
  position: var(---position, absolute) !important;
}
[-position="sticky-top"].style {
  inset: 0 0 auto 0;
  z-index: 1;
}
[-position="sticky-bottom"].style {
  inset: auto 0 0 0;
  z-index: 1;
}
[-position="sticky-left"].style {
  inset: 0 auto 0 0;
  z-index: 1;
}
[-position="sticky-right"].style {
  inset: 0 0 0 auto;
  z-index: 1;
}
[-position="fixed-top"].style {
  inset: 0 0 auto 0;
  z-index: 1;
}
[-position="fixed-bottom"].style {
  inset: auto 0 0 0;
  z-index: 1;
}
[-position="fixed-left"].style {
  inset: 0 auto 0 0;
  z-index: 1;
}
[-position="fixed-right"].style {
  inset: 0 0 0 auto;
  z-index: 1;
}

[-aspect].style {
  aspect-ratio: var(---aspect, 1) !important;
}

[-overflow].style {
  overflow: var(---overflow, scroll) !important;
}
[-overflow="scroll"].style {
  pointer-events: auto;
  min-width: 100%;
  min-height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  --touch-action: pan-x pan-y;
}

[-overflow-x].style {
  overflow-x: var(---overflow-x, scroll) !important;
}
[-overflow-x="scroll"].style {
  overflow-y: clip;
  pointer-events: auto;
  min-width: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  --touch-action: pan-x;
}

[-overflow-y].style {
  overflow-y: var(---overflow-y, scroll) !important;
}
[-overflow-y="scroll"].style {
  overflow-x: clip;
  pointer-events: auto;
  min-height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  --touch-action: pan-y;
}

[-z].style {
  position: var(---position, relative) !important;
  z-index: var(---z, 1) !important;
}

[-width].style {
  width: var(---width, 100%) !important;
  min-width: var(---width, 0);
  max-width: var(---width, 100%);
}
[-width-min].style {
  min-width: var(---width-min, 0) !important;
}
[-width-max].style {
  max-width: var(---width-max, 100%) !important;
}

[-height].style {
  height: var(---height, 100%) !important;
  min-height: var(---height, 0);
  max-height: var(---height, 100%);
}
[-height-min].style {
  min-height: var(---height-min, 0) !important;
}
[-height-max].style {
  max-height: var(---height-max, 100%) !important;
}

:is([-c], [-corner]).style {
  border-radius: var(---c, var(---corner, 8px)) !important;
}
:is([-c-t], [-corner-t]).style {
  border-start-start-radius: var(---c-t, var(---corner-t, 8px)) !important;
  border-start-end-radius: var(---c-t, var(---corner-t, 8px)) !important;
}
:is([-c-b], [-corner-b]).style {
  border-end-start-radius: var(---c-b, var(---corner-b, 8px)) !important;
  border-end-end-radius: var(---c-b, var(---corner-b, 8px)) !important;
}
:is([-c-l], [-corner-l]).style {
  border-start-start-radius: var(---c-l, var(---corner-l, 8px)) !important;
  border-end-start-radius: var(---c-l, var(---corner-l, 8px)) !important;
}
:is([-c-r], [-corner-r]).style {
  border-start-end-radius: var(---c-r, var(---corner-r, 8px)) !important;
  border-end-end-radius: var(---c-r, var(---corner-r, 8px)) !important;
}
:is([-c-tl], [-corner-tl]).style {
  border-start-start-radius: var(---c-tl, var(---corner-tl, 8px)) !important;
}
:is([-c-tr], [-corner-tr]).style {
  border-start-end-radius: var(---c-tr, var(---corner-tr, 8px)) !important;
}
:is([-c-bl], [-corner-bl]).style {
  border-end-start-radius: var(---c-bl, var(---corner-bl, 8px)) !important;
}
:is([-c-br], [-corner-br]).style {
  border-end-end-radius: var(---c-br, var(---corner-br, 8px)) !important;
}

:is([-o-color], [-outline-color]).style {
  outline-style: solid;
  outline-color: var(
    --o-color,
    var(---outline-color, hsl(0 100% 100% / 50%))
  ) !important;
}

:is([-o-width], [-outline-width]).style {
  outline-style: solid;
  outline-width: var(---o-width, var(---outline-width, 8px)) !important;
}

:is([-o-style], [-outline-style]).style {
  outline-style: var(---o-style, var(---outline-style, solid)) !important;
}

:is([-b-color], [-border-color]).style {
  border-style: solid;
  border-color: var(
    --b-color,
    var(---border-color, hsl(0 100% 100% / 50%))
  ) !important;
}
:is([-b-color-tb], [-border-color-tb]).style {
  border-style: solid;
  border-block-color: var(
    --b-color-tb,
    var(---border-color-tb, hsl(0 100% 100% / 50%))
  ) !important;
}
:is([-b-color-lr], [-border-color-lr]).style {
  border-style: solid;
  border-inline-color: var(
    --b-color-lr,
    var(---border-color-lr, hsl(0 100% 100% / 50%))
  ) !important;
}
:is([-b-color-t], [-border-color-t]).style {
  border-style: solid;
  border-block-start-color: var(
    --b-color-t,
    var(---border-color-t, hsl(0 100% 100% / 50%))
  ) !important;
}
[-border-color-b].style {
  border-style: solid;
  border-block-end-color: var(
    --b-color-b,
    var(---border-color-b, hsl(0 100% 100% / 50%))
  ) !important;
}
:is([-b-color-l], [-border-color-l]).style {
  border-style: solid;
  border-inline-start-color: var(
    --b-color-l,
    var(---border-color-l, hsl(0 100% 100% / 50%))
  ) !important;
}
:is([-b-color-r], [-border-color-r]).style {
  border-style: solid;
  border-inline-end-color: var(
    --b-color-r,
    var(---border-color-r, hsl(0 100% 100% / 50%))
  ) !important;
}

:is([-b-width], [-border-width]).style {
  border-style: solid;
  border-width: var(---b-width, var(---border-width, 8px)) !important;
}
:is([-b-width-tb], [-border-width-tb]).style {
  border-style: solid;
  border-block-width: var(
    ---b-width-tb,
    var(---border-width-tb, 8px)
  ) !important;
}
:is([-b-width-lr], [-border-width-lr]).style {
  border-style: solid;
  border-inline-width: var(
    --b-width-lr,
    var(---border-width-lr, 8px)
  ) !important;
}
:is([-b-width-t], [-border-width-t]).style {
  border-style: solid;
  border-block-start-width: var(
    --b-width-t,
    var(---border-width-t, 8px)
  ) !important;
}
:is([-b-width-b], [-border-width-b]).style {
  border-style: solid;
  border-block-end-width: var(
    --b-width-b,
    var(---border-width-b, 8px)
  ) !important;
}
:is([-b-width-l], [-border-width-l]).style {
  border-style: solid;
  border-inline-start-width: var(
    --b-width-l,
    var(---border-width-l, 8px)
  ) !important;
}
:is([-b-width-r], [-border-width-r]).style {
  border-style: solid;
  border-inline-end-width: var(
    --b-width-r,
    var(---border-width-r, 8px)
  ) !important;
}

:is([-b-style], [-border-style]).style {
  border-style: var(---b-style, var(---border-style, solid)) !important;
}
:is([-b-style-tb], [-border-style-tb]).style {
  border-block-style: var(
    --b-style-tb,
    var(---border-style-tb, solid)
  ) !important;
}
:is([-b-style-lr], [-border-style-lr]).style {
  border-inline-style: var(
    --b-style-lr,
    var(---border-style-lr, solid)
  ) !important;
}
:is([-b-style-t], [-border-style-t]).style {
  border-block-start-style: var(
    --b-style-t,
    var(---border-style-t, solid)
  ) !important;
}
:is([-b-style-b], [-border-style-b]).style {
  border-block-end-style: var(
    --b-style-b,
    var(---border-style-b, solid)
  ) !important;
}
:is([-b-style-l], [-border-style-l]).style {
  border-inline-start-style: var(
    --b-style-l,
    var(---border-style-l, solid)
  ) !important;
}
:is([-b-style-r], [-border-style-r]).style {
  border-inline-end-style: var(
    --b-style-r,
    var(---border-style-r, solid)
  ) !important;
}

:is([-i], [-inset]).style {
  inset: var(---i, var(---inset, 8px)) !important;
}
:is([-i-tb], [-inset-tb]).style {
  inset-block: var(---i-tb, var(---inset-tb, 8px)) !important;
}
:is([-i-lr], [-inset-lr]).style {
  inset-inline: var(---i-lr, var(---inset-lr, 8px)) !important;
}
:is([-i-t], [-inset-t]).style {
  inset-block-start: var(---i-t, var(---inset-t, 8px)) !important;
}
:is([-i-b], [-inset-b]).style {
  inset-block-end: var(---i-b, var(---inset-b, 8px)) !important;
}
:is([-i-l], [-inset-l]).style {
  inset-inline-start: var(---i-l, var(---inset-l, 8px)) !important;
}
:is([-i-r], [-inset-r]).style {
  inset-inline-end: var(---i-r, var(---inset-r, 8px)) !important;
}

:is([-m], [-margin]).style {
  margin: var(---m, var(---margin, 8px)) !important;
}
:is([-m-tb], [-margin-tb]).style {
  margin-block: var(---m-tb, var(---margin-tb, 8px)) !important;
}
:is([-m-lr], [-margin-lr]).style {
  margin-inline: var(---m-lr, var(---margin-lr, 8px)) !important;
}
:is([-m-t], [-margin-t]).style {
  margin-block-start: var(---m-t, var(---margin-t, 8px)) !important;
}
:is([-m-b], [-margin-b]).style {
  margin-block-end: var(---m-b, var(---margin-b, 8px)) !important;
}
:is([-m-l], [-margin-l]).style {
  margin-inline-start: var(---m-l, var(---margin-l, 8px)) !important;
}
:is([-m-r], [-margin-r]).style {
  margin-inline-end: var(---m-r, var(---margin-r, 8px)) !important;
}

:is([-p], [-padding]).style {
  padding: var(---p, var(---padding, 8px)) !important;
}
:is([-p-tb], [-padding-tb]).style {
  padding-block: var(---p-tb, var(---padding-tb, 8px)) !important;
}
:is([-p-lr], [-padding-lr]).style {
  padding-inline: var(---p-lr, var(---padding-lr, 8px)) !important;
}
:is([-p-t], [-padding-t]).style {
  padding-block-start: var(---p-t, var(---padding-t, 8px)) !important;
}
:is([-p-b], [-padding-b]).style {
  padding-block-end: var(---p-b, var(---padding-b, 8px)) !important;
}
:is([-p-l], [-padding-l]).style {
  padding-inline-start: var(---p-l, var(---padding-l, 8px)) !important;
}
:is([-p-r], [-padding-r]).style {
  padding-inline-end: var(---p-r, var(---padding-r, 8px)) !important;
}

[-child-layout].style {
  display: flex;
  flex-direction: var(---child-layout, row) !important;
}
[-child-gap].style {
  gap: var(---child-gap, 8px) !important;
}
[-child-align].style {
  align-items: var(---child-align, center) !important;
}
[-child-justify].style {
  justify-content: var(---child-justify, center) !important;
}
[-child-overflow].style {
  flex-wrap: var(---child-overflow, nowrap) !important;
}
[-self-align].style {
  align-self: var(---self-align, center) !important;
}

[-flex].style {
  flex: var(---flex, 1) !important;
}

[-grow].style {
  flex-grow: var(---grow, 1) !important;
}

[-shrink].style {
  flex-shrink: var(---shrink, 1) !important;
}

[-fill].style path {
  fill: var(---fill, currentColor) !important;
}
[-stroke].style path {
  stroke: var(---stroke, currentColor) !important;
}
[-stroke-width].style path {
  stroke-width: var(---stroke-width, 1) !important;
}

[-invisible].style {
  visibility: var(---invisible, hidden) !important;
}
[-interactable].style {
  pointer-events: var(---interactable, auto) !important;
}
[-interactable="none"].style {
  cursor: default;
}
[-selectable].style {
  user-select: var(---selectable, auto) !important;
}
:is([-selectable=""], [-selectable="auto"]).style {
  cursor: text;
}

[-text-font].style {
  font-family: var(---text-font, monospace) !important;
}

[-text-size].style {
  font-size: var(---text-size, 1rem) !important;
}
[-text-size="2xs"].style {
  line-height: var(--theme_text-2xs-line-height, 1.5);
}
[-text-size="xs"].style {
  line-height: var(--theme_text-xs-line-height, 1.5);
}
[-text-size="sm"].style {
  line-height: var(--theme_text-sm-line-height, 1.5);
}
[-text-size="md"].style {
  line-height: var(--theme_text-md-line-height, 1.5);
}
[-text-size="lg"].style {
  line-height: var(--theme_text-lg-line-height, 1.5);
}
[-text-size="xl"].style {
  line-height: var(--theme_text-xl-line-height, 1.5);
}
[-text-size="2xl"].style {
  line-height: var(--theme_text-2xl-line-height, 1.5);
}
[-text-size="3xl"].style {
  line-height: var(--theme_text-3xl-line-height, 1.5);
}
[-text-size="4xl"].style {
  line-height: var(--theme_text-4xl-line-height, 1.5);
}
[-text-size="5xl"].style {
  line-height: var(--theme_text-5xl-line-height, 1.5);
}
[-text-size="6xl"].style {
  line-height: var(--theme_text-6xl-line-height, 1.5);
}
[-text-size="7xl"].style {
  line-height: var(--theme_text-7xl-line-height, 1.5);
}
[-text-size="8xl"].style {
  line-height: var(--theme_text-8xl-line-height, 1.5);
}
[-text-size="9xl"].style {
  line-height: var(--theme_text-9xl-line-height, 1.5);
}

[-text-leading].style {
  line-height: var(---text-leading, 1.5) !important;
}

[-text-kerning].style {
  letter-spacing: var(---text-kerning, 1.5) !important;
}

[-text-weight].style {
  font-weight: var(---text-weight, 600) !important;
}
[-text-italic].style {
  font-style: var(---text-italic, italic) !important;
}
[-text-underline].style,
[-text-strikethrough].style {
  /* must preserve trailing comma for empty fallback */
  /* prettier-ignore */
  text-decoration-line: var(---text-underline,) var(---text-strikethrough,) !important;
}
[-text-underline-offset].style {
  text-underline-offset: var(---text-underline-offset, 4px) !important;
}
[-text-decoration-thickness].style {
  text-decoration-thickness: var(---text-decoration-thickness, 4px) !important;
}
[-text-case].style {
  text-transform: var(---text-case, uppercase) !important;
}
[-text-align].style {
  text-align: var(---text-align, center) !important;
}
[-text-overflow].style {
  text-overflow: var(---text-overflow, clip) !important;
}
[-text-overflow=""].style {
  white-space: nowrap;
}
[-text-overflow="wrap"].style {
  white-space: break-spaces;
}
[-text-overflow="visible"].style {
  white-space: nowrap;
}
[-text-overflow="clip"].style {
  white-space: nowrap;
}
[-text-overflow="ellipsis"].style {
  display: block;
  overflow: hidden;
  white-space: nowrap;
}
[-text-whitespace].style {
  white-space: var(---text-whitespace, normal) !important;
}
[-text-color].style {
  color: var(---text-color, white) !important;
}
[-text-stroke].style,
[-text-stroke-color].style,
[-text-stroke-width].style {
  text-shadow: var(---text-stroke) !important;
}

:is([-bg-color], [-background-color]).style {
  background-color: var(---bg-color, var(---background-color)) !important;
}
:is([-bg-gradient], [-background-gradient]).style,
:is([-bg-pattern], [-background-pattern]).style,
:is([-bg-image], [-background-image]).style {
  background-image: var(---bg-gradient, var(---background-gradient, none)),
    var(---bg-pattern, var(---background-pattern, none)),
    var(---bg-image, var(---background-image, none)) !important;
}
:is([-bg-repeat], [-background-repeat]).style {
  background-repeat: no-repeat, no-repeat,
    var(---bg-repeat, var(---background-repeat, repeat)) !important;
}
:is([-bg-align], [-background-align]).style {
  background-position: center, center,
    var(---bg-align, var(---background-align, center)) !important;
}
:is([-bg-fit], [-background-fit]).style {
  background-size: auto, cover, var(---bg-fit, var(---background-fit, contain)) !important;
}

[-clip].style {
  clip-path: var(---clip, circle(50%)) !important;
}

[-shadow].style {
  transition-property: opacity, transform, box-shadow !important;
  box-shadow: var(
    --shadow,
    0 1px 2px hsl(0 0% 0% / 30%),
    0 1px 3px hsl(0 0% 0% / 15%)
  ) !important;
}
[-shadow-inset].style {
  box-shadow: var(
    --shadow-inset,
    inset 0 1px 2px hsl(0 0% 0% / 30%),
    inset 0 1px 3px hsl(0 0% 0% / 15%)
  ) !important;
}

[-filter].style {
  backdrop-filter: var(---filter, none) !important;
}

[-blend].style {
  mix-blend-mode: var(---blend, normal) !important;
}

[-opacity].style {
  transition-property: opacity, transform, box-shadow !important;
  opacity: var(---opacity, 1) !important;
}

[-translate-x].style,
[-translate-y].style,
[-translate-z].style,
[-rotate-x].style,
[-rotate-y].style,
[-rotate-z].style,
[-scale-x].style,
[-scale-y].style,
[-scale-z].style,
[-skew-x].style,
[-skew-y].style {
  transition-property: opacity, transform, box-shadow !important;
  transform: scale3d(var(---scale-x, 1), var(---scale-y, 1), var(---scale-z, 1))
    rotate3d(
      var(---rotate-x, 0),
      var(---rotate-y, 0),
      var(---rotate-z, 0),
      var(---rotate, 0)
    )
    translate3d(
      var(---translate-x, 0),
      var(---translate-y, 0),
      var(---translate-z, 0)
    )
    skew(var(---skew-x, 0), var(---skew-y, 0)) !important;
}

[-pivot].style {
  transform-origin: var(---pivot, left) !important;
}

[-delay].style {
  transition-delay: var(---delay, 100ms) !important;
}
[-duration].style {
  transition-duration: var(---duration, 100ms) !important;
}
[-ease].style {
  transition-timing-function: var(---ease, ease) !important;
}

[-animation].style {
  animation: var(---animation, var(--theme_animation-bounce)) !important;
}

[-mask].style {
  background-color: transparent !important;
  background-image: none !important;
}
[-mask].style::before {
  /* Apply mask to a pseudo-element so that drop-shadow filters applied to the root element will match the shape of the mask */
  position: absolute !important;
  inset: 0 !important;
  content: "" !important;
  background-image: var(---background-gradient, none),
    var(---background-pattern, none), var(---background-image, none) !important;
  background-color: var(---background-color) !important;
  -webkit-mask: var(---mask, none) !important;
  mask: var(---mask, none) !important;
}

[-content-visibility].style {
  content-visibility: var(---content-visibility, auto);
}

[-contain-intrinsic-size].style {
  contain-intrinsic-size: var(---contain-intrinsic-size, none);
}

[-icon].style {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: var(--theme_font-icon) !important;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  speak: never;

  /* Enable Ligatures ================ */
  letter-spacing: 0;
  -webkit-font-feature-settings: "liga";
  -moz-font-feature-settings: "liga=1";
  -moz-font-feature-settings: "liga";
  -ms-font-feature-settings: "liga" 1;
  font-feature-settings: "liga";
  -webkit-font-variant-ligatures: discretionary-ligatures;
  font-variant-ligatures: discretionary-ligatures;

  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
