[display] {
  display: var(---display, block) !important;
}

[position] {
  position: var(---position, absolute) !important;
}
[position="sticky-top"] {
  inset: 0 0 auto 0;
  z-index: 1;
}
[position="sticky-bottom"] {
  inset: auto 0 0 0;
  z-index: 1;
}
[position="sticky-left"] {
  inset: 0 auto 0 0;
  z-index: 1;
}
[position="sticky-right"] {
  inset: 0 0 0 auto;
  z-index: 1;
}
[position="fixed-top"] {
  inset: 0 0 auto 0;
  z-index: 1;
}
[position="fixed-bottom"] {
  inset: auto 0 0 0;
  z-index: 1;
}
[position="fixed-left"] {
  inset: 0 auto 0 0;
  z-index: 1;
}
[position="fixed-right"] {
  inset: 0 0 0 auto;
  z-index: 1;
}

[aspect] {
  aspect-ratio: var(---aspect, 1) !important;
}

[overflow] {
  overflow: var(---overflow, scroll) !important;
}
[overflow="scroll"] {
  pointer-events: auto;
  min-width: 100%;
  min-height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  ---touch-action: pan-x pan-y;
}

[overflow-x] {
  overflow-x: var(---overflow-x, scroll) !important;
}
[overflow-x="scroll"] {
  overflow-y: clip;
  pointer-events: auto;
  min-width: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  ---touch-action: pan-x;
}

[overflow-y] {
  overflow-y: var(---overflow-y, scroll) !important;
}
[overflow-y="scroll"] {
  overflow-x: clip;
  pointer-events: auto;
  min-height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  ---touch-action: pan-y;
}

[z] {
  position: var(---position, relative) !important;
  z-index: var(---z, 1) !important;
}

:is([w], [width]) {
  width: var(---width, 100%) !important;
  min-width: var(---width, 0);
  max-width: var(---width, 100%);
}
:is([w-min], [width-min]) {
  min-width: var(---width-min, 0) !important;
}
:is([w-max], [width-max]) {
  max-width: var(---width-max, 100%) !important;
}

:is([h], [height]) {
  height: var(---height, 100%) !important;
  min-height: var(---height, 0);
  max-height: var(---height, 100%);
}
:is([h-min], [height-min]) {
  min-height: var(---height-min, 0) !important;
}
:is([h-max], [height-max]) {
  max-height: var(---height-max, 100%) !important;
}

:is([c], [corner]) {
  border-radius: var(---corner, 8px) !important;
}
:is([c-t], [corner-t]) {
  border-start-start-radius: var(---corner-t, 8px) !important;
  border-start-end-radius: var(---corner-t, 8px) !important;
}
:is([c-b], [corner-b]) {
  border-end-start-radius: var(---corner-b, 8px) !important;
  border-end-end-radius: var(---corner-b, 8px) !important;
}
:is([c-l], [corner-l]) {
  border-start-start-radius: var(---corner-l, 8px) !important;
  border-end-start-radius: var(---corner-l, 8px) !important;
}
:is([c-r], [corner-r]) {
  border-start-end-radius: var(---corner-r, 8px) !important;
  border-end-end-radius: var(---corner-r, 8px) !important;
}
:is([c-tl], [corner-tl]) {
  border-start-start-radius: var(---corner-tl, 8px) !important;
}
:is([c-tr], [corner-tr]) {
  border-start-end-radius: var(---corner-tr, 8px) !important;
}
:is([c-bl], [corner-bl]) {
  border-end-start-radius: var(---corner-bl, 8px) !important;
}
:is([c-br], [corner-br]) {
  border-end-end-radius: var(---corner-br, 8px) !important;
}

:is([o-color], [outline-color]) {
  outline-style: solid;
  outline-color: var(
    ---o-color,
    var(---outline-color, hsl(0 100% 100% / 50%))
  ) !important;
}

:is([o-width], [outline-width]) {
  outline-style: solid;
  outline-width: var(---outline-width, 8px) !important;
}

:is([o-style], [outline-style]) {
  outline-style: var(---outline-style, solid) !important;
}

:is([b-color], [border-color]) {
  border-style: solid;
  border-color: var(---border-color, hsl(0 100% 100% / 50%)) !important;
}
:is([b-color-tb], [border-color-tb]) {
  border-style: solid;
  border-block-color: var(
    ---border-color-tb,
    hsl(0 100% 100% / 50%)
  ) !important;
}
:is([b-color-lr], [border-color-lr]) {
  border-style: solid;
  border-inline-color: var(
    ---border-color-lr,
    hsl(0 100% 100% / 50%)
  ) !important;
}
:is([b-color-t], [border-color-t]) {
  border-style: solid;
  border-block-start-color: var(
    ---border-color-t,
    hsl(0 100% 100% / 50%)
  ) !important;
}
[border-color-b] {
  border-style: solid;
  border-block-end-color: var(
    ---border-color-b,
    hsl(0 100% 100% / 50%)
  ) !important;
}
:is([b-color-l], [border-color-l]) {
  border-style: solid;
  border-inline-start-color: var(
    ---border-color-l,
    hsl(0 100% 100% / 50%)
  ) !important;
}
:is([b-color-r], [border-color-r]) {
  border-style: solid;
  border-inline-end-color: var(
    ---border-color-r,
    hsl(0 100% 100% / 50%)
  ) !important;
}

:is([b-width], [border-width]) {
  border-style: solid;
  border-width: var(---border-width, 8px) !important;
}
:is([b-width-tb], [border-width-tb]) {
  border-style: solid;
  border-block-width: var(---border-width-tb, 8px) !important;
}
:is([b-width-lr], [border-width-lr]) {
  border-style: solid;
  border-inline-width: var(---border-width-lr, 8px) !important;
}
:is([b-width-t], [border-width-t]) {
  border-style: solid;
  border-block-start-width: var(---border-width-t, 8px) !important;
}
:is([b-width-b], [border-width-b]) {
  border-style: solid;
  border-block-end-width: var(---border-width-b, 8px) !important;
}
:is([b-width-l], [border-width-l]) {
  border-style: solid;
  border-inline-start-width: var(---border-width-l, 8px) !important;
}
:is([b-width-r], [border-width-r]) {
  border-style: solid;
  border-inline-end-width: var(---border-width-r, 8px) !important;
}

:is([b-style], [border-style]) {
  border-style: var(---border-style, solid) !important;
}
:is([b-style-tb], [border-style-tb]) {
  border-block-style: var(---border-style-tb, solid) !important;
}
:is([b-style-lr], [border-style-lr]) {
  border-inline-style: var(---border-style-lr, solid) !important;
}
:is([b-style-t], [border-style-t]) {
  border-block-start-style: var(---border-style-t, solid) !important;
}
:is([b-style-b], [border-style-b]) {
  border-block-end-style: var(---border-style-b, solid) !important;
}
:is([b-style-l], [border-style-l]) {
  border-inline-start-style: var(---border-style-l, solid) !important;
}
:is([b-style-r], [border-style-r]) {
  border-inline-end-style: var(---border-style-r, solid) !important;
}

:is([i], [inset]) {
  inset: var(---inset, 8px) !important;
}
:is([i-tb], [inset-tb]) {
  inset-block: var(---inset-tb, 8px) !important;
}
:is([i-lr], [inset-lr]) {
  inset-inline: var(---inset-lr, 8px) !important;
}
:is([i-t], [inset-t]) {
  inset-block-start: var(---inset-t, 8px) !important;
}
:is([i-b], [inset-b]) {
  inset-block-end: var(---inset-b, 8px) !important;
}
:is([i-l], [inset-l]) {
  inset-inline-start: var(---inset-l, 8px) !important;
}
:is([i-r], [inset-r]) {
  inset-inline-end: var(---inset-r, 8px) !important;
}

:is([m], [margin]) {
  margin: var(---margin, 8px) !important;
}
:is([m-tb], [margin-tb]) {
  margin-block: var(---margin-tb, 8px) !important;
}
:is([m-lr], [margin-lr]) {
  margin-inline: var(---margin-lr, 8px) !important;
}
:is([m-t], [margin-t]) {
  margin-block-start: var(---margin-t, 8px) !important;
}
:is([m-b], [margin-b]) {
  margin-block-end: var(---margin-b, 8px) !important;
}
:is([m-l], [margin-l]) {
  margin-inline-start: var(---margin-l, 8px) !important;
}
:is([m-r], [margin-r]) {
  margin-inline-end: var(---margin-r, 8px) !important;
}

:is([p], [padding]) {
  padding: var(---padding, 8px) !important;
}
:is([p-tb], [padding-tb]) {
  padding-block: var(---padding-tb, 8px) !important;
}
:is([p-lr], [padding-lr]) {
  padding-inline: var(---padding-lr, 8px) !important;
}
:is([p-t], [padding-t]) {
  padding-block-start: var(---padding-t, 8px) !important;
}
:is([p-b], [padding-b]) {
  padding-block-end: var(---padding-b, 8px) !important;
}
:is([p-l], [padding-l]) {
  padding-inline-start: var(---padding-l, 8px) !important;
}
:is([p-r], [padding-r]) {
  padding-inline-end: var(---padding-r, 8px) !important;
}

:is([child-layout="row"], [child-layout="column"]) {
  display: flex;
  flex-direction: var(---child-layout, row) !important;
}
:is([child-layout="grid"], [columns]) {
  display: grid;
  grid-template-columns: var(---columns, 1fr 1fr 1fr);
}
[child-gap] {
  gap: var(---child-gap, 8px) !important;
}
[child-align] {
  align-items: var(---child-align, center) !important;
}
[child-justify] {
  justify-content: var(---child-justify, center) !important;
}
[child-overflow] {
  flex-wrap: var(---child-overflow, nowrap) !important;
}
[self-align] {
  align-self: var(---self-align, center) !important;
}

[flex] {
  flex: var(---flex, 1) !important;
}

[grow] {
  flex-grow: var(---grow, 1) !important;
}

[shrink] {
  flex-shrink: var(---shrink, 1) !important;
}

[fill] path {
  fill: var(---fill, currentColor) !important;
}
[stroke] path {
  stroke: var(---stroke, currentColor) !important;
}
[stroke-width] path {
  stroke-width: var(---stroke-width, 1) !important;
}

[visible] {
  visibility: visible !important;
}
[invisible] {
  visibility: hidden !important;
}
[interactable] {
  pointer-events: var(---interactable, auto) !important;
}
[interactable="none"] {
  cursor: default;
}
[selectable] {
  user-select: var(---selectable, auto) !important;
}
:is([selectable=""], [selectable="auto"]) {
  cursor: text;
}

[text-font] {
  font-family: var(---text-font, monospace) !important;
}

[text-size] {
  font-size: var(---text-size, 1rem) !important;
}
[text-size="2xs"] {
  line-height: var(---theme_text-2xs-line-height, 1.5);
}
[text-size="xs"] {
  line-height: var(---theme_text-xs-line-height, 1.5);
}
[text-size="sm"] {
  line-height: var(---theme_text-sm-line-height, 1.5);
}
[text-size="md"] {
  line-height: var(---theme_text-md-line-height, 1.5);
}
[text-size="lg"] {
  line-height: var(---theme_text-lg-line-height, 1.5);
}
[text-size="xl"] {
  line-height: var(---theme_text-xl-line-height, 1.5);
}
[text-size="2xl"] {
  line-height: var(---theme_text-2xl-line-height, 1.5);
}
[text-size="3xl"] {
  line-height: var(---theme_text-3xl-line-height, 1.5);
}
[text-size="4xl"] {
  line-height: var(---theme_text-4xl-line-height, 1.5);
}
[text-size="5xl"] {
  line-height: var(---theme_text-5xl-line-height, 1.5);
}
[text-size="6xl"] {
  line-height: var(---theme_text-6xl-line-height, 1.5);
}
[text-size="7xl"] {
  line-height: var(---theme_text-7xl-line-height, 1.5);
}
[text-size="8xl"] {
  line-height: var(---theme_text-8xl-line-height, 1.5);
}
[text-size="9xl"] {
  line-height: var(---theme_text-9xl-line-height, 1.5);
}

[text-leading] {
  line-height: var(---text-leading, 1.5) !important;
}

[text-kerning] {
  letter-spacing: var(---text-kerning, 1.5) !important;
}

[text-weight] {
  font-weight: var(---text-weight, 600) !important;
}
[text-italic] {
  font-style: var(---text-italic, italic) !important;
}
[text-underline],
[text-strikethrough] {
  /* must preserve trailing comma for empty fallback */
  /* prettier-ignore */
  text-decoration-line: var(---text-underline,) var(---text-strikethrough,) !important;
}
[text-underline-offset] {
  text-underline-offset: var(---text-underline-offset, 4px) !important;
}
[text-decoration-thickness] {
  text-decoration-thickness: var(---text-decoration-thickness, 4px) !important;
}
[text-case] {
  text-transform: var(---text-case, uppercase) !important;
}
[text-align] {
  text-align: var(---text-align, center) !important;
}
[text-overflow] {
  text-overflow: var(---text-overflow, clip) !important;
}
[text-overflow=""] {
  white-space: nowrap;
}
[text-overflow="wrap"] {
  white-space: break-spaces;
}
[text-overflow="visible"] {
  white-space: nowrap;
}
[text-overflow="clip"] {
  white-space: nowrap;
}
[text-overflow="ellipsis"] {
  display: block;
  overflow: hidden;
  white-space: nowrap;
}
[text-whitespace] {
  white-space: var(---text-whitespace, normal) !important;
}
[text-color] {
  color: var(---text-color, white) !important;
}
[text-stroke],
[text-stroke-color],
[text-stroke-width] {
  text-shadow: var(---text-stroke) !important;
}

:is([bg-color], [background-color]) {
  background-color: var(---background-color) !important;
}
:is([bg-image], [background-image]),
:is([bg-gradient], [background-gradient]),
:is([bg-pattern], [background-pattern]) {
  background-image: var(---background-image, none),
    var(---background-gradient, none), var(---background-pattern, none) !important;
}
:is([bg-repeat], [background-repeat]) {
  background-repeat: var(---background-repeat, repeat), no-repeat, no-repeat !important;
}
:is([bg-align], [background-align]) {
  background-position: var(---background-align, center), center, center !important;
}
:is([bg-fit], [background-fit]) {
  background-size: var(---background-fit, contain), auto, cover !important;
}

[clip] {
  clip-path: var(---clip, circle(50%)) !important;
}

[shadow] {
  transition-property: opacity, transform, box-shadow !important;
  box-shadow: var(
    ---shadow,
    0 1px 2px hsl(0 0% 0% / 30%),
    0 1px 3px hsl(0 0% 0% / 15%)
  ) !important;
}
[shadow-inset] {
  box-shadow: var(
    ---shadow-inset,
    inset 0 1px 2px hsl(0 0% 0% / 30%),
    inset 0 1px 3px hsl(0 0% 0% / 15%)
  ) !important;
}

:is([ring], [ring-width], [ring-color]) {
  box-shadow: 0 0 0 var(---ring-width, 2px)
    var(---ring-color, hsl(210 100% 70%)) !important;
  outline: none !important;
}

[filter] {
  backdrop-filter: var(---filter, none) !important;
}

[blend] {
  mix-blend-mode: var(---blend, normal) !important;
}

[opacity] {
  transition-property: opacity, transform, box-shadow !important;
  opacity: var(---opacity, 1) !important;
}

[translate-x],
[translate-y],
[translate-z],
[rotate-x],
[rotate-y],
[rotate-z],
[scale-x],
[scale-y],
[scale-z],
[skew-x],
[skew-y] {
  transition-property: opacity, transform, box-shadow !important;
  transform: scale3d(var(---scale-x, 1), var(---scale-y, 1), var(---scale-z, 1))
    rotate3d(
      var(---rotate-x, 0),
      var(---rotate-y, 0),
      var(---rotate-z, 0),
      var(---rotate, 0)
    )
    translate3d(
      var(---translate-x, 0),
      var(---translate-y, 0),
      var(---translate-z, 0)
    )
    skew(var(---skew-x, 0), var(---skew-y, 0)) !important;
}

[pivot] {
  transform-origin: var(---pivot, left) !important;
}

[delay] {
  transition-delay: var(---delay, 100ms) !important;
}
[duration] {
  transition-duration: var(---duration, 100ms) !important;
}
[ease] {
  transition-timing-function: var(---ease, ease) !important;
}

[animation] {
  animation: var(---animation, var(---theme_animation-bounce)) !important;
}

[mask] {
  ---theme_mask-angled-corner: conic-gradient(
        from -45deg at var(---corner, 8px) var(---corner, 8px),
        #0000 25%,
        #000 0
      )
      calc(-1 * var(---corner, 8px)) 0 /100% 51% repeat-x,
    conic-gradient(
        from 135deg at var(---corner, 8px) calc(100% - var(---corner, 8px)),
        #0000 25%,
        #000 0
      )
      calc(-1 * var(---corner, 8px)) 100%/100% 51% repeat-x !important;

  ---theme_mask-scooped-corner: radial-gradient(
      var(---corner, 8px) at var(---corner, 8px) var(---corner, 8px),
      #0000 99%,
      #000
    )
    calc(-1 * var(---corner, 8px)) calc(-1 * var(---corner, 8px)) !important;

  ---theme_mask-notched-corner: conic-gradient(
      at calc(2 * var(---corner, 8px)) calc(2 * var(---corner, 8px)),
      #000 75%,
      #0000 0
    )
    calc(-1 * var(---corner, 8px)) calc(-1 * var(---corner, 8px)) !important;

  background-color: transparent !important;
  background-image: none !important;
}
[mask] ::before {
  /* Apply mask to a pseudo-element so that drop-shadow filters applied to the root element will match the shape of the mask */
  position: absolute !important;
  inset: 0 !important;
  content: "" !important;
  background-image: var(---background-gradient, none),
    var(---background-pattern, none), var(---background-image, none) !important;
  background-color: var(---background-color) !important;
  -webkit-mask: var(---mask, none) !important;
  mask: var(---mask, none) !important;
}

[content-visibility] {
  content-visibility: var(---content-visibility, auto);
}

[contain-intrinsic-size] {
  contain-intrinsic-size: var(---contain-intrinsic-size, none);
}

.root::after {
  display: none;
  ---focus-duration: 50ms;
  position: absolute;
  inset: 0;
  content: "";
  border-radius: inherit;
  transition-property: outline-offset, opacity;
  transition-duration: var(---focus-duration);
  transition-timing-function: ease;
  outline-offset: calc(-2 * var(---theme_focus-ring-width));
  pointer-events: none;
}
.root.focused::after {
  display: flex;
  outline: var(---theme_color-focus) var(---theme_focus-ring-style)
    var(---theme_focus-ring-width);
  outline-offset: calc(-1 * var(---theme_focus-ring-width));
  -webkit-mask: none;
  mask: none;
}
.root.focused.pressed::after {
  display: flex;
  outline-offset: calc((-1 * var(---theme_focus-ring-width)) - 2px);
}
