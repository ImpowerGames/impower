:host {
  display: contents;
  ---value: 0;
  ---size: 1em;
  ---background-color: var(---theme-color-neutral-30);
  ---color: var(---theme-color-primary-60);
  ---position: relative;
  ---child-justify: center;
  ---child-align: center;
  ---track-width: 2px;
  ---indicator-width: var(---track-width);
  ---duration: 0.35s;
  ---speed: 2;
  ---text-font: var(---theme-font-sans);
  ---text-size: var(---theme-text-xs-font-size);
  ---text-leading: var(---theme-text-xs-line-height);
}

:host > .root {
  display: flex;
  position: var(---position);
  min-width: var(---size);
  min-height: var(---size);
  width: var(---size);
  height: var(---size);
  justify-content: center;
  align-items: center;
  background-color: transparent;
  contain: strict;
  will-change: transform;
}

:host > .root > .label {
  display: flex;
  justify-content: var(---child-justify);
  align-items: var(---child-align);
  font-family: var(---text-font);
  font-size: var(---text-size);
  line-height: var(---text-leading);
}

:host > .root > .circle {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  max-height: 100%;
  transform: rotateZ(-90deg);
  transform-origin: 50% 50%;
}

:host > .root > .circle > .track,
:host > .root > .circle > .indicator {
  ---radius: calc(var(---size) / 2);
  fill: none;
  r: calc(var(---radius) - var(---track-width) / 2);
  cx: var(---radius);
  cy: var(---radius);
}

:host > .root > .circle > .track {
  stroke: var(---background-color);
  stroke-width: var(---track-width);
  transform-origin: 0% 0%;
}

:host > .root > .circle > .indicator {
  stroke: var(---color);
  stroke-width: var(---indicator-width);
  stroke-linecap: round;
  transform-origin: 50% 50%;
  will-change: transform;
}

:host([value]) > .root > .circle > .indicator {
  ---circumference: calc(var(---size) * 3.141592654);
  transition-property: stroke-dashoffset;
  transition-duration: var(---duration);
  stroke-dasharray: var(---circumference) var(---circumference);
  stroke-dashoffset: calc(
    var(---circumference) - var(---value) * var(---circumference)
  );
}

:host(:not([value])) > .root > .circle > .indicator {
  stroke-dasharray: 137%, 137%;
  animation: indeterminate-circle calc(1s * var(---speed)) linear infinite;
}

@keyframes indeterminate-circle {
  0% {
    transform: rotate(0deg);
  }

  50% {
    transform: rotate(450deg);
  }

  100% {
    transform: rotate(1080deg);
  }
}
