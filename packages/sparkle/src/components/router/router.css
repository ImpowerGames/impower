:host {
  display: contents;
}
:host {
  --exit: var(--s-animation-exit-zoom);
  --enter: var(--s-animation-enter-zoom);
  --position: relative;
  --exit-fade: var(--s-animation-exit-fade);
  --enter-fade: var(--s-animation-enter-fade);
}

:host > .root {
  position: relative;
  display: flex;
  flex: 1 1 100%;
}
:host > .root[state] {
  overflow-x: clip;
  overflow-y: clip;
}
:host > .root[state="exiting"]::after {
  content: "";
  position: absolute;
  inset: 0;
  /* Block input during exit animation */
  pointer-events: auto;
}

:host > .root > .content {
  position: relative;
  display: flex;
  flex: 1 1 100%;
}

:host([unmount="on-enter"]) > .root > .content > .old-fade {
  display: contents;
}
:host([unmount="on-enter"]) > .root[state="entering"] > .content > .old-fade {
  display: none;
}
:host > .root:is([state="exiting"], [state="loading"]) > .content > .old-fade {
  display: flex;
  flex: 1 1 100%;
  animation: var(--exit-fade) both;
}

:host([unmount="on-enter"]) > .root > .content > .old-fade > .old-transform {
  display: contents;
}
:host
  > .root:is([state="exiting"], [state="loading"])
  > .content
  > .old-fade
  > .old-transform {
  display: flex;
  flex: 1 1 100%;
  animation: var(--exit) both;
}

:host(:not([unmount="on-enter"])) > .root:not([state]) > .content > .old-fade {
  display: contents;
}
:host(:not([unmount="on-enter"])) > .root > .content > .old-fade {
  transition-duration: 0s;
}
:host(:not([unmount="on-enter"]))
  > .root[state="entering"][mounting]
  > .content
  > .old-fade {
  animation-play-state: paused;
}
:host(:not([unmount="on-enter"]))
  > .root[state="entering"]:not([mounting])
  > .content
  > .old-fade {
  animation-play-state: running;
}
:host(:not([unmount="on-enter"]))
  > .root[state="entering"]
  > .content
  > .old-fade {
  display: flex;
  flex: 1 1 100%;
  animation: var(--enter-fade) both;
}

:host(:not([unmount="on-enter"]))
  > .root:not([state])
  > .content
  > .old-fade
  > .old-transform {
  display: contents;
}
:host(:not([unmount="on-enter"]))
  > .root
  > .content
  > .old-fade
  > .old-transform {
  display: flex;
  flex: 1 1 100%;
}
:host(:not([unmount="on-enter"]))
  > .root[state="entering"][mounting]
  > .content
  > .old-fade
  > .old-transform {
  animation-play-state: paused;
}
:host(:not([unmount="on-enter"]))
  > .root[state="entering"]:not([mounting])
  > .content
  > .old-fade
  > .old-transform {
  animation-play-state: running;
}
:host(:not([unmount="on-enter"]))
  > .root[state="entering"]
  > .content
  > .old-fade
  > .old-transform {
  animation: var(--enter) both;
}

:host([unmount="on-enter"]) > .root > .content > .new-fade {
  display: none;
}
:host > .root > .content > .new-fade {
  position: absolute;
  inset: 0;
  pointer-events: none;
}
:host([unmount="on-enter"]) > .root[state="entering"] > .content > .new-fade {
  display: flex;
  flex: 1 1 100%;
  animation: var(--enter-fade) both;
}

:host([unmount="on-enter"]) > .root > .content > .new-fade > .new-transform {
  display: flex;
  flex: 1 1 100%;
}
:host([unmount="on-enter"])
  > .root[state="entering"]
  > .content
  > .new-fade
  > .new-transform {
  animation: var(--enter) both;
}
