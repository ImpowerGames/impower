:host {
  display: contents;
  ---exit: var(---theme-animation-exit-zoom);
  ---enter: var(---theme-animation-enter-zoom);
  ---position: relative;
  ---exit-fade: var(---theme-animation-exit-fade);
  ---enter-fade: var(---theme-animation-enter-fade);
}

:host > .root {
  display: flex;
  position: relative;
  flex: 1 1 100%;
}
:host > .root[status] {
  overflow-x: clip;
  overflow-y: clip;
}
:host > .root[status="exiting"]::after {
  content: "";
  position: absolute;
  inset: 0;
  /* Block input during exit animation */
  pointer-events: auto;
}

:host > .root > .content {
  position: relative;
  display: flex;
  flex: 1 1 100%;
}

:host > .root > .content > .old-fade {
  will-change: opacity;
}
:host([unmount="on-enter"]) > .root > .content > .old-fade {
  display: contents;
}
:host([unmount="on-enter"]) > .root[status="entering"] > .content > .old-fade {
  display: none;
}
:host
  > .root:is([status="exiting"], [status="loading"])
  > .content
  > .old-fade {
  display: flex;
  flex: 1 1 100%;
  animation: var(---exit-fade) both;
}

:host > .root > .content > .old-fade > .old-transform {
  will-change: transform;
}
:host([unmount="on-enter"]) > .root > .content > .old-fade > .old-transform {
  display: contents;
}
:host
  > .root:is([status="exiting"], [status="loading"])
  > .content
  > .old-fade
  > .old-transform {
  display: flex;
  flex: 1 1 100%;
  animation: var(---exit) both;
  transform-origin: var(---pivot, top center);
}

:host(:not([unmount="on-enter"])) > .root:not([status]) > .content > .old-fade {
  display: contents;
}
:host(:not([unmount="on-enter"])) > .root > .content > .old-fade {
  transition-duration: 0s;
}
:host(:not([unmount="on-enter"]))
  > .root[status="entering"][mounting]
  > .content
  > .old-fade {
  animation-play-state: paused;
}
:host(:not([unmount="on-enter"]))
  > .root[status="entering"]:not([mounting])
  > .content
  > .old-fade {
  animation-play-state: running;
}
:host(:not([unmount="on-enter"]))
  > .root[status="entering"]
  > .content
  > .old-fade {
  display: flex;
  flex: 1 1 100%;
  animation: var(---enter-fade) both;
}

:host(:not([unmount="on-enter"]))
  > .root:not([status])
  > .content
  > .old-fade
  > .old-transform {
  display: contents;
}
:host(:not([unmount="on-enter"]))
  > .root
  > .content
  > .old-fade
  > .old-transform {
  display: flex;
  flex: 1 1 100%;
}
:host(:not([unmount="on-enter"]))
  > .root[status="entering"][mounting]
  > .content
  > .old-fade
  > .old-transform {
  animation-play-state: paused;
}
:host(:not([unmount="on-enter"]))
  > .root[status="entering"]:not([mounting])
  > .content
  > .old-fade
  > .old-transform {
  animation-play-state: running;
}
:host(:not([unmount="on-enter"]))
  > .root[status="entering"]
  > .content
  > .old-fade
  > .old-transform {
  animation: var(---enter) both;
  transform-origin: var(---pivot, top center);
}

:host > .root > .content > .new-fade {
  will-change: opacity;
}
:host([unmount="on-enter"]) > .root > .content > .new-fade {
  display: none;
}
:host > .root > .content > .new-fade {
  display: none;
  position: absolute;
  inset: 0;
  pointer-events: none;
}
:host([unmount="on-enter"]) > .root[status="entering"] > .content > .new-fade {
  display: flex;
  flex: 1 1 100%;
  animation: var(---enter-fade) both;
}

:host > .root > .content > .new-fade > .new-transform {
  will-change: transform;
}
:host([unmount="on-enter"]) > .root > .content > .new-fade > .new-transform {
  display: flex;
  flex: 1 1 100%;
}
:host([unmount="on-enter"])
  > .root[status="entering"]
  > .content
  > .new-fade
  > .new-transform {
  animation: var(---enter) both;
  transform-origin: var(---pivot, top center);
}
